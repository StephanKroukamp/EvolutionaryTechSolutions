DROP SCHEMA IF EXISTS musicstore;
CREATE SCHEMA IF NOT EXISTS musicstore;

CREATE TABLE IF NOT EXISTS musicstore.artists (
  id INT NOT NULL AUTO_INCREMENT PRIMARY KEY,
  title TEXT NOT NULL,
  description TEXT NOT NULL
) ENGINE=INNODB;

CREATE TABLE IF NOT EXISTS musicstore.albums (
  id INT NOT NULL AUTO_INCREMENT PRIMARY KEY,
  title TEXT NOT NULL,
  artistId INT NOT NULL,
  KEY IX_albums_artistId (artistId),
  CONSTRAINT FK_albums_artists_artistId FOREIGN KEY (artistId) REFERENCES artists (id) ON DELETE RESTRICT
) ENGINE=INNODB;

CREATE TABLE IF NOT EXISTS musicstore.categories (
  id INT NOT NULL AUTO_INCREMENT PRIMARY KEY,
  title TEXT NOT NULL
) ENGINE=INNODB;

CREATE TABLE IF NOT EXISTS musicstore.playlists (
  id INT NOT NULL AUTO_INCREMENT PRIMARY KEY,
  title TEXT NOT NULL
) ENGINE=INNODB;

CREATE TABLE IF NOT EXISTS musicstore.songs (
  id INT NOT NULL AUTO_INCREMENT PRIMARY KEY,
  title TEXT NOT NULL
) ENGINE=INNODB;

CREATE TABLE IF NOT EXISTS musicstore.categoriesAlbums (
  id INT NOT NULL AUTO_INCREMENT PRIMARY KEY,
  categoryId INT NOT NULL,
  albumId INT NOT NULL,
  KEY IX_categoriesAlbums_categoryId (categoryId),
  KEY IX_categoriesAlbums_albumId (albumId),
  CONSTRAINT FK_categoriesAlbums_categories_categoryId FOREIGN KEY (categoryId) REFERENCES categories (id) ON DELETE RESTRICT,
  CONSTRAINT FK_categoriesAlbums_albums_albumId FOREIGN KEY (albumId) REFERENCES albums (id) ON DELETE RESTRICT
) ENGINE=INNODB;

CREATE TABLE IF NOT EXISTS musicstore.categoriesArtists (
  id INT NOT NULL AUTO_INCREMENT PRIMARY KEY,
  categoryId INT NOT NULL,
  artistId INT NOT NULL,
  KEY IX_categoriesArtists_categoryId (categoryId),
  KEY IX_categoriesArtists_artistId (artistId),
  CONSTRAINT FK_categoriesArtists_categories_categoryId FOREIGN KEY (categoryId) REFERENCES categories (id) ON DELETE RESTRICT,
  CONSTRAINT FK_categoriesArtists_artists_artistId FOREIGN KEY (artistId) REFERENCES artists (id) ON DELETE RESTRICT
) ENGINE=INNODB;

CREATE TABLE IF NOT EXISTS musicstore.categoriesPlaylists (
  id INT NOT NULL AUTO_INCREMENT PRIMARY KEY,
  categoryId INT NOT NULL,
  playlistId INT NOT NULL,
  KEY IX_categoriesPlaylists_categoryId (categoryId),
  KEY IX_categoriesPlaylists_playlistId (playlistId),
  CONSTRAINT FK_categoriesPlaylists_categories_categoryId FOREIGN KEY (categoryId) REFERENCES categories (id) ON DELETE RESTRICT,
  CONSTRAINT FK_categoriesPlaylists_playlists_playlistId FOREIGN KEY (playlistId) REFERENCES playlists (id) ON DELETE RESTRICT
) ENGINE=INNODB;

CREATE TABLE IF NOT EXISTS musicstore.categoriesSongs (
  id INT NOT NULL AUTO_INCREMENT PRIMARY KEY,
  categoryId INT NOT NULL,
  songId INT NOT NULL,
  KEY IX_categoriesSongs_categoryId (categoryId),
  KEY IX_categoriesSongs_songId (songId),
  CONSTRAINT FK_categoriesSongs_categories_categoryId FOREIGN KEY (categoryId) REFERENCES categories (id) ON DELETE RESTRICT,
  CONSTRAINT FK_categoriesSongs_songs_songId FOREIGN KEY (songId) REFERENCES songs (id) ON DELETE RESTRICT
) ENGINE=INNODB;

CREATE TABLE IF NOT EXISTS musicstore.songsAlbums (
  id INT NOT NULL AUTO_INCREMENT PRIMARY KEY,
  songId INT NOT NULL,
  albumId INT NOT NULL,
  KEY IX_songsAlbums_songId (songId),
  KEY IX_songsAlbums_calbumId (albumId),
  CONSTRAINT FK_songsAlbums_songs_songId FOREIGN KEY (songId) REFERENCES songs (id) ON DELETE RESTRICT,
  CONSTRAINT FK_songsAlbums_albums_albumId FOREIGN KEY (albumId) REFERENCES albums (id) ON DELETE RESTRICT
) ENGINE=INNODB;

CREATE TABLE IF NOT EXISTS musicstore.songsArtists (
  id INT NOT NULL AUTO_INCREMENT PRIMARY KEY,
  songId INT NOT NULL,
  artistId INT NOT NULL,
  KEY IX_songsArtists_songId (songId),
  KEY IX_songsArtists_artistId (artistId),
  CONSTRAINT FK_songsArtists_songs_songId FOREIGN KEY (songId) REFERENCES songs (id) ON DELETE RESTRICT,
  CONSTRAINT FK_songsArtists_artists_artistId FOREIGN KEY (artistId) REFERENCES artists (id) ON DELETE RESTRICT
) ENGINE=INNODB;

CREATE TABLE IF NOT EXISTS musicstore.songsPlaylists (
  id INT NOT NULL AUTO_INCREMENT PRIMARY KEY,
  songId INT NOT NULL,
  playlistId INT NOT NULL,
  KEY IX_songsPlaylists_songId (songId),
  KEY IX_songsPlaylists_playlistId (playlistId),
  CONSTRAINT FK_songsPlaylists_songs_songId FOREIGN KEY (songId) REFERENCES songs (id) ON DELETE RESTRICT,
  CONSTRAINT FK_songsPlaylists_playlists_playlistId FOREIGN KEY (playlistId) REFERENCES playlists (id) ON DELETE RESTRICT
) ENGINE=INNODB;